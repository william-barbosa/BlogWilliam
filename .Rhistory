# Renomeando as colunas
colnames(Dicinario) = c("level","label" ,"Variavel")
Scenario
Unit
Indicator
AllItem
Region
# Salvando a base e o diocionário
write.table(Dados,'Dados_All_AGT0SSP245.txt',sep = '\t',dec = '.',col.names = T,row.names = F,fileEncoding = 'UTF-8')
openxlsx::write.xlsx(Dicinario, 'Leia_me_AGT0SSP245.xlsx')
rm(list=ls())
dados = read_xlsx('ExtraOUTPUT-AGT0SSP0ZD-29Jan20.xlsx') %>%
select(Scenario,	Unit,	Indicator,	AllItem,	Region,	ScenYear,	Value)
scenario = unique(dados$Scenario)
# Visualizando os headers
names(dados)
# Obtendo os níveis e labels dos valores em cada variável categórica
rotulos = apply(dados[,1:6],2,unique)
for(i in 1:length(rotulos)){
rotulos[[i]] = sort( rotulos[[i]])
rotulos[[i]] =  as.data.frame(rotulos[[i]]) %>%
mutate(aa = rownames(.)) %>%
`colnames<-`(c('label','level'))
}
# Escrever data frames separados e aplica formato numérico dentro de cada data frame:
for(i in 1:length(rotulos)){
assign(paste0(names(dados[,1:6])[i]), rotulos[[i]])
}
Dados =  dados %>%
mutate(
Scenario = factor(Scenario,
levels = scenario,      # label
labels = c(1)),         # level
Unit = factor(Unit,
levels = c('ha', 'kcal/cap/day', 'ton'),
labels = c(1, 2, 3)),
Indicator = factor(Indicator,
levels = c('CalConsumption', 'Exports', 'LandUse'),
labels = c(1, 2, 3)),
AllItem = factor(AllItem,
levels = c('Barl','BeaD','BVMEAT','Cass','Corn','Cott','Gnut','NatVegLoss','NonProd',
'OPAL','PastureBOVD','PGMEAT','Pota','PTMEAT','Rice','SGMEAT','Soya','Srgh',
'SugC','SwPo','Total','Whea'),
labels = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22)),
Region = factor(Region,
levels = c('Acre','Alagoas','Amapa','Amazonas','Amazonia','Bahia','Brazil','Caatinga',
'Ceara','Cerrado','DistritoFederal','EspiritoSanto','Goias','Maranhao',
'MataAtlantica','MatoGrosso','MatoGrossoDoSul','MinasGerais','Pampa',
'Pantanal','Para','Paraiba','Parana','Pernambuco','Piaui','RioDeJaneiro',
'RioGrandeDoNorte','RioGrandeDoSul','Rondonia','Roraima','SantaCatarina',
'SaoPaulo','Sergipe','Tocantins'),
labels = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34)),
ScenYear = factor(ScenYear,
levels = c('2000','2005','2010','2015','2020','2025','2030','2035','2040','2045','2050'),
labels = c(1,2,3,4,5,6,7,8,9,10,11))
) %>%
mutate_at(.vars = c(1:ncol(.)), function(x){as.numeric(x)}  )
Scenario$Variavel = 'Scenario'
Unit$Variavel = 'Unit'
Indicator$Variavel ='Indicator'
AllItem$Variavel ='AllItem'
Region$Variavel ='Region'
ScenYear$Variavel ='ScenYear'
Dicinario = bind_rows(
list(Scenario,  Unit ,     Indicator, AllItem ,  Region, ScenYear)
) %>%
mutate(level=as.numeric(level))
# Renomeando as colunas
colnames(Dicinario) = c("level","label" ,"Variavel")
# Salvando a base e o diocionário
write.table(Dados,'Dados_All_AGT0SSP245.txt',sep = '\t',dec = '.',col.names = T,row.names = F,fileEncoding = 'UTF-8')
##################################################################################################
###########                Tabulando os novos dados 14-01-2020                         ###########
##################################################################################################
library(dplyr)
library(readxl)
rm(list=ls())
# Indicando o diretório
setwd("C:/Users/William/Desktop/Bento/Versao_29_janeiro")
dados = read_xlsx('ExtraOUTPUT-Baseline-29Jan20.xlsx') %>%
select(Scenario,	Unit,	Indicator,	AllItem,	Region,	ScenYear,	Value)
# IMPORTANTE!!! A ordem das colunas deve ser c(Scenario,	Unit,	Indicator,	AllItem,	Region,	ScenYear,	Value)
#dados[,1:6] = apply(dados[,1:6],2,as.character)
scenario = unique(dados$Scenario)
# Visualizando os headers
names(dados)
# Obtendo os níveis e labels dos valores em cada variável categórica
rotulos = apply(dados[,1:6],2,unique)
for(i in 1:length(rotulos)){
rotulos[[i]] = sort( rotulos[[i]])
rotulos[[i]] =  as.data.frame(rotulos[[i]]) %>%
mutate(aa = rownames(.)) %>%
`colnames<-`(c('label','level'))
}
# Escrever data frames separados e aplica formato numérico dentro de cada data frame:
for(i in 1:length(rotulos)){
assign(paste0(names(dados[,1:6])[i]), rotulos[[i]])
}
#"Scenario"  "Unit"      "Indicator" "AllItem"   "Region" "ScenYear"
# Aplicando os factor nas variáveis categóricas
#Dados =  dados %>%  mutate_at(.vars = c(1:5), function(x){factor(x)}  )
Dados =  dados %>%
mutate(
Scenario = factor(Scenario,
levels = scenario,      # label
labels = c(1)),         # level
Unit = factor(Unit,
levels = c('ha', 'kcal/cap/day', 'ton'),
labels = c(1, 2, 3)),
Indicator = factor(Indicator,
levels = c('CalConsumption', 'Exports', 'LandUse'),
labels = c(1, 2, 3)),
AllItem = factor(AllItem,
levels = c('Barl','BeaD','BVMEAT','Cass','Corn','Cott','Gnut','NatVegLoss','NonProd',
'OPAL','PastureBOVD','PGMEAT','Pota','PTMEAT','Rice','SGMEAT','Soya','Srgh',
'SugC','SwPo','Total','Whea'),
labels = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22)),
Region = factor(Region,
levels = c('Acre','Alagoas','Amapa','Amazonas','Amazonia','Bahia','Brazil','Caatinga',
'Ceara','Cerrado','DistritoFederal','EspiritoSanto','Goias','Maranhao',
'MataAtlantica','MatoGrosso','MatoGrossoDoSul','MinasGerais','Pampa',
'Pantanal','Para','Paraiba','Parana','Pernambuco','Piaui','RioDeJaneiro',
'RioGrandeDoNorte','RioGrandeDoSul','Rondonia','Roraima','SantaCatarina',
'SaoPaulo','Sergipe','Tocantins'),
labels = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34)),
ScenYear = factor(ScenYear,
levels = c('2000','2005','2010','2015','2020','2025','2030','2035','2040','2045','2050'),
labels = c(1,2,3,4,5,6,7,8,9,10,11))
) %>%
mutate_at(.vars = c(1:ncol(.)), function(x){as.numeric(x)}  )
Scenario$Variavel = 'Scenario'
Unit$Variavel = 'Unit'
Indicator$Variavel ='Indicator'
AllItem$Variavel ='AllItem'
Region$Variavel ='Region'
ScenYear$Variavel ='ScenYear'
Dicinario = bind_rows(
list(Scenario,  Unit ,     Indicator, AllItem ,  Region, ScenYear)
) %>%
mutate(level=as.numeric(level))
# Renomeando as colunas
colnames(Dicinario) = c("level","label" ,"Variavel")
# Salvando a base e o diocionário
write.table(Dados,'Dados_All_Baseline.txt',sep = '\t',dec = '.',col.names = T,row.names = F,fileEncoding = 'UTF-8')
openxlsx::write.xlsx(Dicinario, 'Leia_me_Baseline.xlsx')
###################################################################################################################
########                              Abrindo o cenário AGT1SSP245                                          #######
###################################################################################################################
rm(list=ls())
dados = read_xlsx('ExtraOUTPUT-AGT1SSP245-29Jan20.xlsx') %>%
select(Scenario,	Unit,	Indicator,	AllItem,	Region,	ScenYear,	Value)
# IMPORTANTE!!! A ordem das colunas deve ser c(Scenario,	Unit,	Indicator,	AllItem,	Region,	ScenYear,	Value)
#dados[,1:6] = apply(dados[,1:6],2,as.character)
scenario = unique(dados$Scenario)
# Visualizando os headers
names(dados)
# Obtendo os níveis e labels dos valores em cada variável categórica
rotulos = apply(dados[,1:6],2,unique)
for(i in 1:length(rotulos)){
rotulos[[i]] = sort( rotulos[[i]])
rotulos[[i]] =  as.data.frame(rotulos[[i]]) %>%
mutate(aa = rownames(.)) %>%
`colnames<-`(c('label','level'))
}
# Escrever data frames separados e aplica formato numérico dentro de cada data frame:
for(i in 1:length(rotulos)){
assign(paste0(names(dados[,1:6])[i]), rotulos[[i]])
}
#"Scenario"  "Unit"      "Indicator" "AllItem"   "Region" "ScenYear"
# Aplicando os factor nas variáveis categóricas
#Dados =  dados %>%  mutate_at(.vars = c(1:5), function(x){factor(x)}  )
Dados =  dados %>%
mutate(
Scenario = factor(Scenario,
levels = scenario,      # label
labels = c(1)),         # level
Unit = factor(Unit,
levels = c('ha', 'kcal/cap/day', 'ton'),
labels = c(1, 2, 3)),
Indicator = factor(Indicator,
levels = c('CalConsumption', 'Exports', 'LandUse'),
labels = c(1, 2, 3)),
AllItem = factor(AllItem,
levels = c('Barl','BeaD','BVMEAT','Cass','Corn','Cott','Gnut','NatVegLoss','NonProd',
'OPAL','PastureBOVD','PGMEAT','Pota','PTMEAT','Rice','SGMEAT','Soya','Srgh',
'SugC','SwPo','Total','Whea'),
labels = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22)),
Region = factor(Region,
levels = c('Acre','Alagoas','Amapa','Amazonas','Amazonia','Bahia','Brazil','Caatinga',
'Ceara','Cerrado','DistritoFederal','EspiritoSanto','Goias','Maranhao',
'MataAtlantica','MatoGrosso','MatoGrossoDoSul','MinasGerais','Pampa',
'Pantanal','Para','Paraiba','Parana','Pernambuco','Piaui','RioDeJaneiro',
'RioGrandeDoNorte','RioGrandeDoSul','Rondonia','Roraima','SantaCatarina',
'SaoPaulo','Sergipe','Tocantins'),
labels = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34)),
ScenYear = factor(ScenYear,
levels = c('2000','2005','2010','2015','2020','2025','2030','2035','2040','2045','2050'),
labels = c(1,2,3,4,5,6,7,8,9,10,11))
) %>%
mutate_at(.vars = c(1:ncol(.)), function(x){as.numeric(x)}  )
Scenario$Variavel = 'Scenario'
Unit$Variavel = 'Unit'
Indicator$Variavel ='Indicator'
AllItem$Variavel ='AllItem'
Region$Variavel ='Region'
ScenYear$Variavel ='ScenYear'
Dicinario = bind_rows(
list(Scenario,  Unit ,     Indicator, AllItem ,  Region, ScenYear)
) %>%
mutate(level=as.numeric(level))
# Renomeando as colunas
colnames(Dicinario) = c("level","label" ,"Variavel")
# Salvando a base e o diocionário
write.table(Dados,'Dados_All_AGT1SSP245.txt',sep = '\t',dec = '.',col.names = T,row.names = F,fileEncoding = 'UTF-8')
openxlsx::write.xlsx(Dicinario, 'Leia_me_AGT1SSP245.xlsx')
###################################################################################################################
########                              Abrindo o cenário AGT1SSP0                                            #######
###################################################################################################################
rm(list=ls())
dados = read_xlsx('ExtraOUTPUT-AGT1SSP0-29Jan20.xlsx') %>%
select(Scenario,	Unit,	Indicator,	AllItem,	Region,	ScenYear,	Value)
# IMPORTANTE!!! A ordem das colunas deve ser c(Scenario,	Unit,	Indicator,	AllItem,	Region,	ScenYear,	Value)
#dados[,1:6] = apply(dados[,1:6],2,as.character)
scenario = unique(dados$Scenario)
# Visualizando os headers
names(dados)
# Obtendo os níveis e labels dos valores em cada variável categórica
rotulos = apply(dados[,1:6],2,unique)
for(i in 1:length(rotulos)){
rotulos[[i]] = sort( rotulos[[i]])
rotulos[[i]] =  as.data.frame(rotulos[[i]]) %>%
mutate(aa = rownames(.)) %>%
`colnames<-`(c('label','level'))
}
# Escrever data frames separados e aplica formato numérico dentro de cada data frame:
for(i in 1:length(rotulos)){
assign(paste0(names(dados[,1:6])[i]), rotulos[[i]])
}
#"Scenario"  "Unit"      "Indicator" "AllItem"   "Region" "ScenYear"
# Aplicando os factor nas variáveis categóricas
#Dados =  dados %>%  mutate_at(.vars = c(1:5), function(x){factor(x)}  )
Dados =  dados %>%
mutate(
Scenario = factor(Scenario,
levels = scenario,      # label
labels = c(1)),         # level
Unit = factor(Unit,
levels = c('ha', 'kcal/cap/day', 'ton'),
labels = c(1, 2, 3)),
Indicator = factor(Indicator,
levels = c('CalConsumption', 'Exports', 'LandUse'),
labels = c(1, 2, 3)),
AllItem = factor(AllItem,
levels = c('Barl','BeaD','BVMEAT','Cass','Corn','Cott','Gnut','NatVegLoss','NonProd',
'OPAL','PastureBOVD','PGMEAT','Pota','PTMEAT','Rice','SGMEAT','Soya','Srgh',
'SugC','SwPo','Total','Whea'),
labels = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22)),
Region = factor(Region,
levels = c('Acre','Alagoas','Amapa','Amazonas','Amazonia','Bahia','Brazil','Caatinga',
'Ceara','Cerrado','DistritoFederal','EspiritoSanto','Goias','Maranhao',
'MataAtlantica','MatoGrosso','MatoGrossoDoSul','MinasGerais','Pampa',
'Pantanal','Para','Paraiba','Parana','Pernambuco','Piaui','RioDeJaneiro',
'RioGrandeDoNorte','RioGrandeDoSul','Rondonia','Roraima','SantaCatarina',
'SaoPaulo','Sergipe','Tocantins'),
labels = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34)),
ScenYear = factor(ScenYear,
levels = c('2000','2005','2010','2015','2020','2025','2030','2035','2040','2045','2050'),
labels = c(1,2,3,4,5,6,7,8,9,10,11))
) %>%
mutate_at(.vars = c(1:ncol(.)), function(x){as.numeric(x)}  )
Scenario$Variavel = 'Scenario'
Unit$Variavel = 'Unit'
Indicator$Variavel ='Indicator'
AllItem$Variavel ='AllItem'
Region$Variavel ='Region'
ScenYear$Variavel ='ScenYear'
Dicinario = bind_rows(
list(Scenario,  Unit ,     Indicator, AllItem ,  Region, ScenYear)
) %>%
mutate(level=as.numeric(level))
# Renomeando as colunas
colnames(Dicinario) = c("level","label" ,"Variavel")
# Salvando a base e o diocionário
write.table(Dados,'Dados_All_AGT1SSP0.txt',sep = '\t',dec = '.',col.names = T,row.names = F,fileEncoding = 'UTF-8')
openxlsx::write.xlsx(Dicinario, 'Leia_me_AGT1SSP0.xlsx')
###################################################################################################################
########                              Abrindo o cenário AGT0SSP245ZD                                        #######
###################################################################################################################
rm(list=ls())
dados = read_xlsx('ExtraOUTPUT-AGT0SSP245ZD-29Jan20.xlsx') %>%
select(Scenario,	Unit,	Indicator,	AllItem,	Region,	ScenYear,	Value)
# IMPORTANTE!!! A ordem das colunas deve ser c(Scenario,	Unit,	Indicator,	AllItem,	Region,	ScenYear,	Value)
#dados[,1:6] = apply(dados[,1:6],2,as.character)
scenario = unique(dados$Scenario)
# Visualizando os headers
names(dados)
# Obtendo os níveis e labels dos valores em cada variável categórica
rotulos = apply(dados[,1:6],2,unique)
for(i in 1:length(rotulos)){
rotulos[[i]] = sort( rotulos[[i]])
rotulos[[i]] =  as.data.frame(rotulos[[i]]) %>%
mutate(aa = rownames(.)) %>%
`colnames<-`(c('label','level'))
}
# Escrever data frames separados e aplica formato numérico dentro de cada data frame:
for(i in 1:length(rotulos)){
assign(paste0(names(dados[,1:6])[i]), rotulos[[i]])
}
#"Scenario"  "Unit"      "Indicator" "AllItem"   "Region" "ScenYear"
# Aplicando os factor nas variáveis categóricas
#Dados =  dados %>%  mutate_at(.vars = c(1:5), function(x){factor(x)}  )
Dados =  dados %>%
mutate(
Scenario = factor(Scenario,
levels = scenario,      # label
labels = c(1)),         # level
Unit = factor(Unit,
levels = c('ha', 'kcal/cap/day', 'ton'),
labels = c(1, 2, 3)),
Indicator = factor(Indicator,
levels = c('CalConsumption', 'Exports', 'LandUse'),
labels = c(1, 2, 3)),
AllItem = factor(AllItem,
levels = c('Barl','BeaD','BVMEAT','Cass','Corn','Cott','Gnut','NatVegLoss','NonProd',
'OPAL','PastureBOVD','PGMEAT','Pota','PTMEAT','Rice','SGMEAT','Soya','Srgh',
'SugC','SwPo','Total','Whea'),
labels = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22)),
Region = factor(Region,
levels = c('Acre','Alagoas','Amapa','Amazonas','Amazonia','Bahia','Brazil','Caatinga',
'Ceara','Cerrado','DistritoFederal','EspiritoSanto','Goias','Maranhao',
'MataAtlantica','MatoGrosso','MatoGrossoDoSul','MinasGerais','Pampa',
'Pantanal','Para','Paraiba','Parana','Pernambuco','Piaui','RioDeJaneiro',
'RioGrandeDoNorte','RioGrandeDoSul','Rondonia','Roraima','SantaCatarina',
'SaoPaulo','Sergipe','Tocantins'),
labels = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34)),
ScenYear = factor(ScenYear,
levels = c('2000','2005','2010','2015','2020','2025','2030','2035','2040','2045','2050'),
labels = c(1,2,3,4,5,6,7,8,9,10,11))
) %>%
mutate_at(.vars = c(1:ncol(.)), function(x){as.numeric(x)}  )
Scenario$Variavel = 'Scenario'
Unit$Variavel = 'Unit'
Indicator$Variavel ='Indicator'
AllItem$Variavel ='AllItem'
Region$Variavel ='Region'
ScenYear$Variavel ='ScenYear'
Dicinario = bind_rows(
list(Scenario,  Unit ,     Indicator, AllItem ,  Region, ScenYear)
) %>%
mutate(level=as.numeric(level))
# Renomeando as colunas
colnames(Dicinario) = c("level","label" ,"Variavel")
# Salvando a base e o diocionário
write.table(Dados,'Dados_All_AGT0SSP245ZD.txt',sep = '\t',dec = '.',col.names = T,row.names = F,fileEncoding = 'UTF-8')
openxlsx::write.xlsx(Dicinario, 'Leia_me_AGT0SSP245ZD.xlsx')
###################################################################################################################
########                              Abrindo o cenário AGT0SSP245                                        #######
###################################################################################################################
rm(list=ls())
dados = read_xlsx('ExtraOUTPUT-AGT0SSP245-29Jan20.xlsx') %>%
select(Scenario,	Unit,	Indicator,	AllItem,	Region,	ScenYear,	Value)
# IMPORTANTE!!! A ordem das colunas deve ser c(Scenario,	Unit,	Indicator,	AllItem,	Region,	ScenYear,	Value)
#dados[,1:6] = apply(dados[,1:6],2,as.character)
scenario = unique(dados$Scenario)
# Visualizando os headers
names(dados)
# Obtendo os níveis e labels dos valores em cada variável categórica
rotulos = apply(dados[,1:6],2,unique)
for(i in 1:length(rotulos)){
rotulos[[i]] = sort( rotulos[[i]])
rotulos[[i]] =  as.data.frame(rotulos[[i]]) %>%
mutate(aa = rownames(.)) %>%
`colnames<-`(c('label','level'))
}
# Escrever data frames separados e aplica formato numérico dentro de cada data frame:
for(i in 1:length(rotulos)){
assign(paste0(names(dados[,1:6])[i]), rotulos[[i]])
}
#"Scenario"  "Unit"      "Indicator" "AllItem"   "Region" "ScenYear"
# Aplicando os factor nas variáveis categóricas
#Dados =  dados %>%  mutate_at(.vars = c(1:5), function(x){factor(x)}  )
Dados =  dados %>%
mutate(
Scenario = factor(Scenario,
levels = scenario,      # label
labels = c(1)),         # level
Unit = factor(Unit,
levels = c('ha', 'kcal/cap/day', 'ton'),
labels = c(1, 2, 3)),
Indicator = factor(Indicator,
levels = c('CalConsumption', 'Exports', 'LandUse'),
labels = c(1, 2, 3)),
AllItem = factor(AllItem,
levels = c('Barl','BeaD','BVMEAT','Cass','Corn','Cott','Gnut','NatVegLoss','NonProd',
'OPAL','PastureBOVD','PGMEAT','Pota','PTMEAT','Rice','SGMEAT','Soya','Srgh',
'SugC','SwPo','Total','Whea'),
labels = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22)),
Region = factor(Region,
levels = c('Acre','Alagoas','Amapa','Amazonas','Amazonia','Bahia','Brazil','Caatinga',
'Ceara','Cerrado','DistritoFederal','EspiritoSanto','Goias','Maranhao',
'MataAtlantica','MatoGrosso','MatoGrossoDoSul','MinasGerais','Pampa',
'Pantanal','Para','Paraiba','Parana','Pernambuco','Piaui','RioDeJaneiro',
'RioGrandeDoNorte','RioGrandeDoSul','Rondonia','Roraima','SantaCatarina',
'SaoPaulo','Sergipe','Tocantins'),
labels = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34)),
ScenYear = factor(ScenYear,
levels = c('2000','2005','2010','2015','2020','2025','2030','2035','2040','2045','2050'),
labels = c(1,2,3,4,5,6,7,8,9,10,11))
) %>%
mutate_at(.vars = c(1:ncol(.)), function(x){as.numeric(x)}  )
Scenario$Variavel = 'Scenario'
Unit$Variavel = 'Unit'
Indicator$Variavel ='Indicator'
AllItem$Variavel ='AllItem'
Region$Variavel ='Region'
ScenYear$Variavel ='ScenYear'
Dicinario = bind_rows(
list(Scenario,  Unit ,     Indicator, AllItem ,  Region, ScenYear)
) %>%
mutate(level=as.numeric(level))
# Renomeando as colunas
colnames(Dicinario) = c("level","label" ,"Variavel")
# Salvando a base e o diocionário
write.table(Dados,'Dados_All_AGT0SSP245.txt',sep = '\t',dec = '.',col.names = T,row.names = F,fileEncoding = 'UTF-8')
openxlsx::write.xlsx(Dicinario, 'Leia_me_AGT0SSP245.xlsx')
###################################################################################################################
########                              Abrindo o cenário AGT0SSP0ZD                                        #######
###################################################################################################################
rm(list=ls())
dados = read_xlsx('ExtraOUTPUT-AGT0SSP0ZD-29Jan20.xlsx') %>%
select(Scenario,	Unit,	Indicator,	AllItem,	Region,	ScenYear,	Value)
# IMPORTANTE!!! A ordem das colunas deve ser c(Scenario,	Unit,	Indicator,	AllItem,	Region,	ScenYear,	Value)
#dados[,1:6] = apply(dados[,1:6],2,as.character)
scenario = unique(dados$Scenario)
# Visualizando os headers
names(dados)
# Obtendo os níveis e labels dos valores em cada variável categórica
rotulos = apply(dados[,1:6],2,unique)
for(i in 1:length(rotulos)){
rotulos[[i]] = sort( rotulos[[i]])
rotulos[[i]] =  as.data.frame(rotulos[[i]]) %>%
mutate(aa = rownames(.)) %>%
`colnames<-`(c('label','level'))
}
# Escrever data frames separados e aplica formato numérico dentro de cada data frame:
for(i in 1:length(rotulos)){
assign(paste0(names(dados[,1:6])[i]), rotulos[[i]])
}
#"Scenario"  "Unit"      "Indicator" "AllItem"   "Region" "ScenYear"
# Aplicando os factor nas variáveis categóricas
#Dados =  dados %>%  mutate_at(.vars = c(1:5), function(x){factor(x)}  )
Dados =  dados %>%
mutate(
Scenario = factor(Scenario,
levels = scenario,      # label
labels = c(1)),         # level
Unit = factor(Unit,
levels = c('ha', 'kcal/cap/day', 'ton'),
labels = c(1, 2, 3)),
Indicator = factor(Indicator,
levels = c('CalConsumption', 'Exports', 'LandUse'),
labels = c(1, 2, 3)),
AllItem = factor(AllItem,
levels = c('Barl','BeaD','BVMEAT','Cass','Corn','Cott','Gnut','NatVegLoss','NonProd',
'OPAL','PastureBOVD','PGMEAT','Pota','PTMEAT','Rice','SGMEAT','Soya','Srgh',
'SugC','SwPo','Total','Whea'),
labels = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22)),
Region = factor(Region,
levels = c('Acre','Alagoas','Amapa','Amazonas','Amazonia','Bahia','Brazil','Caatinga',
'Ceara','Cerrado','DistritoFederal','EspiritoSanto','Goias','Maranhao',
'MataAtlantica','MatoGrosso','MatoGrossoDoSul','MinasGerais','Pampa',
'Pantanal','Para','Paraiba','Parana','Pernambuco','Piaui','RioDeJaneiro',
'RioGrandeDoNorte','RioGrandeDoSul','Rondonia','Roraima','SantaCatarina',
'SaoPaulo','Sergipe','Tocantins'),
labels = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34)),
ScenYear = factor(ScenYear,
levels = c('2000','2005','2010','2015','2020','2025','2030','2035','2040','2045','2050'),
labels = c(1,2,3,4,5,6,7,8,9,10,11))
) %>%
mutate_at(.vars = c(1:ncol(.)), function(x){as.numeric(x)}  )
Scenario$Variavel = 'Scenario'
Unit$Variavel = 'Unit'
Indicator$Variavel ='Indicator'
AllItem$Variavel ='AllItem'
Region$Variavel ='Region'
ScenYear$Variavel ='ScenYear'
Dicinario = bind_rows(
list(Scenario,  Unit ,     Indicator, AllItem ,  Region, ScenYear)
) %>%
mutate(level=as.numeric(level))
# Renomeando as colunas
colnames(Dicinario) = c("level","label" ,"Variavel")
# Salvando a base e o diocionário
write.table(Dados,'Dados_All_AGT0SSP0ZD.txt',sep = '\t',dec = '.',col.names = T,row.names = F,fileEncoding = 'UTF-8')
openxlsx::write.xlsx(Dicinario, 'Leia_me_AGT0SSP0ZD.xlsx')
########################################
## Conferindo a dimensão dos arquivos ##
########################################
rm(list = ls())
files = list.files(pattern = '.txt')
dimensao_arquivos = data.frame(Arquivo = files)
dados = list()
for(i in 1:length(files)){
dados[[i]] = data.table::fread(files[i])
dimensao_arquivos$linhas[i] = nrow(dados[[i]])
dimensao_arquivos$colunas[i] = ncol(dados[[i]])
print(dim(dados[[i]]))
}
dimensao_arquivos
setwd('C:/Users/William/CriandoTemaHugo')
blogdown::build_site()
blogdown::serve_site()
