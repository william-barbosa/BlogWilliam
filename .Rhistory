legend.title = element_blank(),
legend.text = element_text(size=7, color="black", face="bold", family="Times"),
legend.box.margin=margin(t = -1,r = -10,b = -2,l = -10), # t = define o espaço entre a legenda e o eixo x
#legend.position="bottom",                   # Posição da legenda para baixo do gráfico
legend.box = "horizontal",                 # Deixa vertical a legenda
legend.spacing.x =  unit(.15, 'cm'),        # Define o espaço entre o item da legenda e o texto
#legend.key.size = unit(.7,"line"),          # Define o tamanho do item
axis.text.x = element_text(color="black", size=8, face="bold", angle = 60,
vjust= .4, family="Times"), # Formata o texto do eixo x
axis.text.y = element_text(color="black", size=8, family="Times"),
axis.line.y = element_line(color = "black",size = .2), # Define a largura do eixo y
axis.line.x = element_line(color = "black",size = .2),  # Define a largura do eixo x
axis.title.x =  element_text(color="black", size=8, face="bold", #angle = 60,
vjust= -2.5, family="Times",hjust = 1), # Formata a label do eixo x
axis.title.y =  element_text(color="black", size=8, face="bold", #angle = 60,
vjust= 2, family="Times",hjust = .8), # Formata a label do eixo y
#legend.justification=c(1,1),legend.position=c(0.18,.98)
) + # Formata o texto do eixo y
labs(subtitle=NULL, y=NULL, x= NULL)
ggplot(data = Vlr_Prod, aes(y = Valor_Producao1, x = Ano, group = Produto,
colour=Produto,shape=Produto)) +
geom_line(size=1) +
geom_point(aes( fill=Produto,shape=Produto),size=2)+
scale_shape_manual(values=c(21,22,23,24,25,16,17,8))+
scale_color_manual(values = c('#FF0000','#008000','#FFFF00','#0000FF','#808080','#FF00FF','#00FF00','#800080','#000000','#00FFFF'))+
scale_fill_manual(values = c('#FF0000','#008000','#FFFF00','#0000FF','#808080','#FF00FF','#00FF00','#800080','#000000','#00FFFF'))+
scale_y_continuous(breaks =  c(0,10,20,30,40,50,60,70,80,90,100,110,120,130,140),
expand = c(0,0), limits = c(0,140))+
scale_x_continuous(breaks=c(1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,
2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018),expand = c(0,0),limits = c(1993.5,2018.5))+
theme(plot.background = element_rect(#fill = "black",
colour="black", size=.3,linetype='solid'),
panel.background = element_rect(fill = "gray97", colour = "white",
size = 0.5, linetype = "solid"),
panel.grid.minor = element_line(size = .2, linetype = 'solid', colour = 'gray97'),
panel.grid.major.x = element_line(size = 0.2, linetype = 'dashed',
colour = "gray60"),
panel.grid.major.y = element_line(size = 0.2, linetype = 'dashed',
colour = "gray60"),
plot.margin = unit(c(0.22, .5, 0.3, 0.5), "cm"),
legend.title = element_blank(),
legend.text = element_text(size=7, color="black", face="bold", family="Times"),
legend.box.margin=margin(t = -1,r = -10,b = -2,l = -10), # t = define o espaço entre a legenda e o eixo x
#legend.position="bottom",                   # Posição da legenda para baixo do gráfico
legend.box = "vertical",                 # Deixa vertical a legenda
legend.spacing.x =  unit(.15, 'cm'),        # Define o espaço entre o item da legenda e o texto
#legend.key.size = unit(.7,"line"),          # Define o tamanho do item
axis.text.x = element_text(color="black", size=8, face="bold", angle = 60,
vjust= .4, family="Times"), # Formata o texto do eixo x
axis.text.y = element_text(color="black", size=8, family="Times"),
axis.line.y = element_line(color = "black",size = .2), # Define a largura do eixo y
axis.line.x = element_line(color = "black",size = .2),  # Define a largura do eixo x
axis.title.x =  element_text(color="black", size=8, face="bold", #angle = 60,
vjust= -2.5, family="Times",hjust = 1), # Formata a label do eixo x
axis.title.y =  element_text(color="black", size=8, face="bold", #angle = 60,
vjust= 2, family="Times",hjust = .8), # Formata a label do eixo y
#legend.justification=c(1,1),legend.position=c(0.18,.98)
) + # Formata o texto do eixo y
labs(subtitle=NULL, y=NULL, x= NULL)
ggplot(data = Vlr_Prod, aes(y = Valor_Producao1, x = Ano, group = Produto,
colour=Produto,shape=Produto)) +
geom_line(size=1) +
geom_point(aes( fill=Produto,shape=Produto),size=2)+
scale_shape_manual(values=c(21,22,23,24,25,16,17,8))+
scale_color_manual(values = c('#FF0000','#008000','#FFFF00','#0000FF','#808080','#FF00FF','#00FF00','#800080','#000000','#00FFFF'))+
scale_fill_manual(values = c('#FF0000','#008000','#FFFF00','#0000FF','#808080','#FF00FF','#00FF00','#800080','#000000','#00FFFF'))+
scale_y_continuous(breaks =  c(0,10,20,30,40,50,60,70,80,90,100,110,120,130,140),
expand = c(0,0), limits = c(0,140))+
scale_x_continuous(breaks=c(1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,
2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018),expand = c(0,0),limits = c(1993.5,2018.5))+
theme(plot.background = element_rect(#fill = "black",
colour="black", size=.3,linetype='solid'),
panel.background = element_rect(fill = "gray97", colour = "white",
size = 0.5, linetype = "solid"),
panel.grid.minor = element_line(size = .2, linetype = 'solid', colour = 'gray97'),
panel.grid.major.x = element_line(size = 0.2, linetype = 'dashed',
colour = "gray60"),
panel.grid.major.y = element_line(size = 0.2, linetype = 'dashed',
colour = "gray60"),
plot.margin = unit(c(0.22, .5, 0.3, 0.5), "cm"),
legend.title = element_blank(),
legend.text = element_text(size=7, color="black", face="bold", family="Times"),
legend.box.margin=margin(t = -1,r = -10,b = -2,l = -10), # t = define o espaço entre a legenda e o eixo x
legend.position="bottom",                   # Posição da legenda para baixo do gráfico
legend.box = "vertical",                 # Deixa vertical a legenda
legend.spacing.x =  unit(.15, 'cm'),        # Define o espaço entre o item da legenda e o texto
#legend.key.size = unit(.7,"line"),          # Define o tamanho do item
axis.text.x = element_text(color="black", size=8, face="bold", angle = 60,
vjust= .4, family="Times"), # Formata o texto do eixo x
axis.text.y = element_text(color="black", size=8, family="Times"),
axis.line.y = element_line(color = "black",size = .2), # Define a largura do eixo y
axis.line.x = element_line(color = "black",size = .2),  # Define a largura do eixo x
axis.title.x =  element_text(color="black", size=8, face="bold", #angle = 60,
vjust= -2.5, family="Times",hjust = 1), # Formata a label do eixo x
axis.title.y =  element_text(color="black", size=8, face="bold", #angle = 60,
vjust= 2, family="Times",hjust = .8), # Formata a label do eixo y
#legend.justification=c(1,1),legend.position=c(0.18,.98)
) + # Formata o texto do eixo y
labs(subtitle=NULL, y=NULL, x= NULL)
ggplot(data = Vlr_Prod, aes(y = Valor_Producao1, x = Ano, group = Produto,
colour=Produto,shape=Produto)) +
geom_line(size=1) +
geom_point(aes( fill=Produto,shape=Produto),size=2)+
scale_shape_manual(values=c(21,22,23,24,25,16,17,8))+
scale_color_manual(values = c('#FF0000','#008000','#FFFF00','#0000FF','#808080','#FF00FF','#00FF00','#800080','#000000','#00FFFF'))+
scale_fill_manual(values = c('#FF0000','#008000','#FFFF00','#0000FF','#808080','#FF00FF','#00FF00','#800080','#000000','#00FFFF'))+
scale_y_continuous(breaks =  c(0,10,20,30,40,50,60,70,80,90,100,110,120,130,140),
expand = c(0,0), limits = c(0,140))+
scale_x_continuous(breaks=c(1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,
2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018),expand = c(0,0),limits = c(1993.5,2018.5))+
theme(plot.background = element_rect(#fill = "black",
colour="black", size=.3,linetype='solid'),
panel.background = element_rect(fill = "gray97", colour = "white",
size = 0.5, linetype = "solid"),
panel.grid.minor = element_line(size = .2, linetype = 'solid', colour = 'gray97'),
panel.grid.major.x = element_line(size = 0.2, linetype = 'dashed',
colour = "gray60"),
panel.grid.major.y = element_line(size = 0.2, linetype = 'dashed',
colour = "gray60"),
plot.margin = unit(c(0.22, .5, 0.3, 0.5), "cm"),
legend.title = element_blank(),
legend.text = element_text(size=7, color="black", face="bold", family="Times"),
legend.box.margin=margin(t = -1,r = -10,b = -2,l = -10), # t = define o espaço entre a legenda e o eixo x
legend.position="top",                   # Posição da legenda para baixo do gráfico
#legend.box = "vertical",                 # Deixa vertical a legenda
legend.spacing.x =  unit(.15, 'cm'),        # Define o espaço entre o item da legenda e o texto
#legend.key.size = unit(.7,"line"),          # Define o tamanho do item
axis.text.x = element_text(color="black", size=8, face="bold", angle = 60,
vjust= .4, family="Times"), # Formata o texto do eixo x
axis.text.y = element_text(color="black", size=8, family="Times"),
axis.line.y = element_line(color = "black",size = .2), # Define a largura do eixo y
axis.line.x = element_line(color = "black",size = .2),  # Define a largura do eixo x
axis.title.x =  element_text(color="black", size=8, face="bold", #angle = 60,
vjust= -2.5, family="Times",hjust = 1), # Formata a label do eixo x
axis.title.y =  element_text(color="black", size=8, face="bold", #angle = 60,
vjust= 2, family="Times",hjust = .8), # Formata a label do eixo y
#legend.justification=c(1,1),legend.position=c(0.18,.98)
) + # Formata o texto do eixo y
labs(subtitle=NULL, y=NULL, x= NULL)
ggplot(data = Vlr_Prod, aes(y = Valor_Producao1, x = Ano, group = Produto,
colour=Produto,shape=Produto)) +
geom_line(size=1) +
geom_point(aes( fill=Produto,shape=Produto),size=2)+
scale_shape_manual(values=c(21,22,23,24,25,16,17,8))+
scale_color_manual(values = c('#FF0000','#008000','#FFFF00','#0000FF','#808080','#FF00FF','#00FF00','#800080','#000000','#00FFFF'))+
scale_fill_manual(values = c('#FF0000','#008000','#FFFF00','#0000FF','#808080','#FF00FF','#00FF00','#800080','#000000','#00FFFF'))+
scale_y_continuous(breaks =  c(0,10,20,30,40,50,60,70,80,90,100,110,120,130,140),
expand = c(0,0), limits = c(0,140))+
scale_x_continuous(breaks=c(1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,
2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018),expand = c(0,0),limits = c(1993.5,2018.5))+
theme(plot.background = element_rect(#fill = "black",
colour="black", size=.3,linetype='solid'),
panel.background = element_rect(fill = "gray97", colour = "white",
size = 0.5, linetype = "solid"),
panel.grid.minor = element_line(size = .2, linetype = 'solid', colour = 'gray97'),
panel.grid.major.x = element_line(size = 0.2, linetype = 'dashed',
colour = "gray60"),
panel.grid.major.y = element_line(size = 0.2, linetype = 'dashed',
colour = "gray60"),
plot.margin = unit(c(0.22, .5, 0.3, 0.5), "cm"),
legend.title = element_blank(),
legend.text = element_text(size=7, color="black", face="bold", family="Times"),
legend.box.margin=margin(t = -1,r = -10,b = -2,l = -10), # t = define o espaço entre a legenda e o eixo x
legend.position="top",legend.direction = 'horizontal',                   # Posição da legenda para baixo do gráfico
#legend.box = "vertical",                 # Deixa vertical a legenda
legend.spacing.x =  unit(.15, 'cm'),        # Define o espaço entre o item da legenda e o texto
#legend.key.size = unit(.7,"line"),          # Define o tamanho do item
axis.text.x = element_text(color="black", size=8, face="bold", angle = 60,
vjust= .4, family="Times"), # Formata o texto do eixo x
axis.text.y = element_text(color="black", size=8, family="Times"),
axis.line.y = element_line(color = "black",size = .2), # Define a largura do eixo y
axis.line.x = element_line(color = "black",size = .2),  # Define a largura do eixo x
axis.title.x =  element_text(color="black", size=8, face="bold", #angle = 60,
vjust= -2.5, family="Times",hjust = 1), # Formata a label do eixo x
axis.title.y =  element_text(color="black", size=8, face="bold", #angle = 60,
vjust= 2, family="Times",hjust = .8), # Formata a label do eixo y
#legend.justification=c(1,1),legend.position=c(0.18,.98)
) + # Formata o texto do eixo y
labs(subtitle=NULL, y=NULL, x= NULL)
ggplot(data = Vlr_Prod, aes(y = Valor_Producao1, x = Ano, group = Produto,
colour=Produto,shape=Produto)) +
geom_line(size=1) +
geom_point(aes( fill=Produto,shape=Produto),size=2)+
scale_shape_manual(values=c(21,22,23,24,25,16,17,8))+
scale_color_manual(values = c('#FF0000','#008000','#FFFF00','#0000FF','#808080','#FF00FF','#00FF00','#800080','#000000','#00FFFF'))+
scale_fill_manual(values = c('#FF0000','#008000','#FFFF00','#0000FF','#808080','#FF00FF','#00FF00','#800080','#000000','#00FFFF'))+
scale_y_continuous(breaks =  c(0,10,20,30,40,50,60,70,80,90,100,110,120,130,140),
expand = c(0,0), limits = c(0,140))+
scale_x_continuous(breaks=c(1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,
2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018),expand = c(0,0),limits = c(1993.5,2018.5))+
theme(plot.background = element_rect(#fill = "black",
colour="black", size=.3,linetype='solid'),
panel.background = element_rect(fill = "gray97", colour = "white",
size = 0.5, linetype = "solid"),
panel.grid.minor = element_line(size = .2, linetype = 'solid', colour = 'gray97'),
panel.grid.major.x = element_line(size = 0.2, linetype = 'dashed',
colour = "gray60"),
panel.grid.major.y = element_line(size = 0.2, linetype = 'dashed',
colour = "gray60"),
plot.margin = unit(c(0.22, .5, 0.3, 0.5), "cm"),
legend.title = element_blank(),
legend.text = element_text(size=7, color="black", face="bold", family="Times"),
legend.box.margin=margin(t = -1,r = -10,b = -2,l = -10), # t = define o espaço entre a legenda e o eixo x
#legend.position="top",
legend.direction = 'horizontal',                   # Posição da legenda para baixo do gráfico
#legend.box = "vertical",                 # Deixa vertical a legenda
legend.spacing.x =  unit(.15, 'cm'),        # Define o espaço entre o item da legenda e o texto
#legend.key.size = unit(.7,"line"),          # Define o tamanho do item
axis.text.x = element_text(color="black", size=8, face="bold", angle = 60,
vjust= .4, family="Times"), # Formata o texto do eixo x
axis.text.y = element_text(color="black", size=8, family="Times"),
axis.line.y = element_line(color = "black",size = .2), # Define a largura do eixo y
axis.line.x = element_line(color = "black",size = .2),  # Define a largura do eixo x
axis.title.x =  element_text(color="black", size=8, face="bold", #angle = 60,
vjust= -2.5, family="Times",hjust = 1), # Formata a label do eixo x
axis.title.y =  element_text(color="black", size=8, face="bold", #angle = 60,
vjust= 2, family="Times",hjust = .8), # Formata a label do eixo y
#legend.justification=c(1,1),legend.position=c(0.18,.98)
) + # Formata o texto do eixo y
labs(subtitle=NULL, y=NULL, x= NULL)
ggplot(data = Vlr_Prod, aes(y = Valor_Producao1, x = Ano, group = Produto,
colour=Produto,shape=Produto)) +
geom_line(size=1) +
geom_point(aes( fill=Produto,shape=Produto),size=2)+
scale_shape_manual(values=c(21,22,23,24,25,16,17,8))+
scale_color_manual(values = c('#FF0000','#008000','#FFFF00','#0000FF','#808080','#FF00FF','#00FF00','#800080','#000000','#00FFFF'))+
scale_fill_manual(values = c('#FF0000','#008000','#FFFF00','#0000FF','#808080','#FF00FF','#00FF00','#800080','#000000','#00FFFF'))+
scale_y_continuous(breaks =  c(0,10,20,30,40,50,60,70,80,90,100,110,120,130,140),
expand = c(0,0), limits = c(0,140))+
scale_x_continuous(breaks=c(1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,
2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018),expand = c(0,0),limits = c(1993.5,2018.5))+
theme(plot.background = element_rect(#fill = "black",
colour="black", size=.3,linetype='solid'),
panel.background = element_rect(fill = "gray97", colour = "white",
size = 0.5, linetype = "solid"),
panel.grid.minor = element_line(size = .2, linetype = 'solid', colour = 'gray97'),
panel.grid.major.x = element_line(size = 0.2, linetype = 'dashed',
colour = "gray60"),
panel.grid.major.y = element_line(size = 0.2, linetype = 'dashed',
colour = "gray60"),
plot.margin = unit(c(0.22, .5, 0.3, 0.5), "cm"),
legend.title = element_blank(),
legend.text = element_text(size=7, color="black", face="bold", family="Times"),
legend.box.margin=margin(t = -1,r = -10,b = -2,l = -10), # t = define o espaço entre a legenda e o eixo x
legend.position="bottom",                   # Posição da legenda para baixo do gráfico
#legend.box = "vertical",                 # Deixa vertical a legenda
legend.spacing.x =  unit(.15, 'cm'),        # Define o espaço entre o item da legenda e o texto
#legend.key.size = unit(.7,"line"),          # Define o tamanho do item
axis.text.x = element_text(color="black", size=8, face="bold", angle = 60,
vjust= .4, family="Times"), # Formata o texto do eixo x
axis.text.y = element_text(color="black", size=8, family="Times"),
axis.line.y = element_line(color = "black",size = .2), # Define a largura do eixo y
axis.line.x = element_line(color = "black",size = .2),  # Define a largura do eixo x
axis.title.x =  element_text(color="black", size=8, face="bold", #angle = 60,
vjust= -2.5, family="Times",hjust = 1), # Formata a label do eixo x
axis.title.y =  element_text(color="black", size=8, face="bold", #angle = 60,
vjust= 2, family="Times",hjust = .8), # Formata a label do eixo y
#legend.justification=c(1,1),legend.position=c(0.18,.98)
) + # Formata o texto do eixo y
labs(subtitle=NULL, y=NULL, x= NULL)
ggplot(data = Vlr_Prod, aes(y = Valor_Producao1, x = Ano, group = Produto,
colour=Produto,shape=Produto)) +
geom_line(size=1) +
geom_point(aes( fill=Produto,shape=Produto),size=2)+
scale_shape_manual(values=c(21,22,23,24,25,16,17,8))+
scale_color_manual(values = c('#FF0000','#008000','#FFFF00','#0000FF','#808080','#FF00FF','#00FF00','#800080','#000000','#00FFFF'))+
scale_fill_manual(values = c('#FF0000','#008000','#FFFF00','#0000FF','#808080','#FF00FF','#00FF00','#800080','#000000','#00FFFF'))+
scale_y_continuous(breaks =  c(0,10,20,30,40,50,60,70,80,90,100,110,120,130,140),
expand = c(0,0), limits = c(0,140))+
scale_x_continuous(breaks=c(1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,
2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018),expand = c(0,0),limits = c(1993.5,2018.5))+
theme(plot.background = element_rect(#fill = "black",
colour="black", size=.3,linetype='solid'),
panel.background = element_rect(fill = "gray97", colour = "white",
size = 0.5, linetype = "solid"),
panel.grid.minor = element_line(size = .2, linetype = 'solid', colour = 'gray97'),
panel.grid.major.x = element_line(size = 0.2, linetype = 'dashed',
colour = "gray60"),
panel.grid.major.y = element_line(size = 0.2, linetype = 'dashed',
colour = "gray60"),
plot.margin = unit(c(0.22, .5, 0.3, 0.5), "cm"),
legend.title = element_blank(),
legend.text = element_text(size=7, color="black", face="bold", family="Times"),
legend.box.margin=margin(t = -1,r = -10,b = -2,l = -10), # t = define o espaço entre a legenda e o eixo x
legend.position="bottom",                   # Posição da legenda para baixo do gráfico
#legend.box = "vertical",                 # Deixa vertical a legenda
legend.spacing.x =  unit(.15, 'cm'),        # Define o espaço entre o item da legenda e o texto
#legend.key.size = unit(.7,"line"),          # Define o tamanho do item
axis.text.x = element_text(color="black", size=8, face="bold", angle = 60,
vjust= .4, family="Times"), # Formata o texto do eixo x
axis.text.y = element_text(color="black", size=8, family="Times"),
axis.line.y = element_line(color = "black",size = .2), # Define a largura do eixo y
axis.line.x = element_line(color = "black",size = .2),  # Define a largura do eixo x
axis.title.x =  element_text(color="black", size=8, face="bold", #angle = 60,
vjust= -2.5, family="Times",hjust = 1), # Formata a label do eixo x
axis.title.y =  element_text(color="black", size=8, face="bold", #angle = 60,
vjust= 2, family="Times",hjust = .8), # Formata a label do eixo y
#legend.justification=c(1,1),legend.position=c(0.18,.98)
) + # Formata o texto do eixo y
labs(subtitle=NULL, y=NULL, x= NULL)
ggplot(data = Vlr_Prod, aes(y = Valor_Producao1, x = Ano, group = Produto,
colour=Produto,shape=Produto)) +
geom_line(size=1) +
geom_point(aes( fill=Produto,shape=Produto),size=2)+
scale_shape_manual(values=c(21,22,23,24,25,16,17,8))+
scale_color_manual(values = c('#FF0000','#008000','#FFFF00','#0000FF','#808080','#FF00FF','#00FF00','#800080','#000000','#00FFFF'))+
scale_fill_manual(values = c('#FF0000','#008000','#FFFF00','#0000FF','#808080','#FF00FF','#00FF00','#800080','#000000','#00FFFF'))+
scale_y_continuous(breaks =  c(0,10,20,30,40,50,60,70,80,90,100,110,120,130,140),
expand = c(0,0), limits = c(0,140))+
scale_x_continuous(breaks=c(1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,
2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018),expand = c(0,0),limits = c(1993.5,2018.5))+
theme(plot.background = element_rect(#fill = "black",
colour="black", size=.3,linetype='solid'),
panel.background = element_rect(fill = "gray97", colour = "white",
size = 0.5, linetype = "solid"),
panel.grid.minor = element_line(size = .2, linetype = 'solid', colour = 'gray97'),
panel.grid.major.x = element_line(size = 0.2, linetype = 'dashed',
colour = "gray60"),
panel.grid.major.y = element_line(size = 0.2, linetype = 'dashed',
colour = "gray60"),
plot.margin = unit(c(0.22, .5, 0.3, 0.5), "cm"),
legend.title = element_blank(),
legend.text = element_text(size=7, color="black", face="bold", family="Times"),
legend.box.margin=margin(t = -1,r = -10,b = -2,l = -10), # t = define o espaço entre a legenda e o eixo x
legend.position="bottom",                   # Posição da legenda para baixo do gráfico
#legend.box = "vertical",                 # Deixa vertical a legenda
legend.spacing.x =  unit(.15, 'cm'),        # Define o espaço entre o item da legenda e o texto
#legend.key.size = unit(.7,"line"),          # Define o tamanho do item
axis.text.x = element_text(color="black", size=8, face="bold", angle = 60,
vjust= .4, family="Times"), # Formata o texto do eixo x
axis.text.y = element_text(color="black", size=8, family="Times"),
axis.line.y = element_line(color = "black",size = .2), # Define a largura do eixo y
axis.line.x = element_line(color = "black",size = .2),  # Define a largura do eixo x
axis.title.x =  element_text(color="black", size=8, face="bold", #angle = 60,
vjust= -2.5, family="Times",hjust = 1), # Formata a label do eixo x
axis.title.y =  element_text(color="black", size=8, face="bold", #angle = 60,
vjust= 2, family="Times",hjust = .8), # Formata a label do eixo y
#legend.justification=c(1,1),legend.position=c(0.18,.98)
) + # Formata o texto do eixo y
labs(subtitle=NULL, y=NULL, x= NULL)+
guides(color = guide_legend(nrow = 1))
37.10+15.2+11+3.7
37.10+15.2+11+3.7+2.5+1.7+1.1+.2
83/40
pop =   sidrar::get_sidra(api = '/t/608/n6/all/v/1000093/p/all/c1/allxt/c2/0/d/v1000093%202')
View(pop)
POP = pop %>%
select(Município, `Situação do domicílio`,Valor) %>%
`colnames<-`(c('Município','Situa','Percentual')) %>%
mutate(
UF = as.numeric(stringr::str_sub(Município,1,2)),
CD_GEOCUF = as.character(UF),
uf = factor(UF,levels =  c(12, 27, 	13, 16,	29, 23,	53, 32,	52, 21,	31, 50,	51, 15,
25, 26, 	22, 41,	33, 24,	11, 14,	43, 42,	28, 35,	17),
labels =  c('AC', 	'AL', 	'AM', 	'AP', 	'BA', 	'CE', 	'DF', 	'ES', 	'GO', 	'MA',
'MG', 	'MS', 	'MT', 	'PA', 	'PB', 	'PE', 	'PI', 	'PR', 	'RJ', 	'RN',
'RO', 	'RR', 	'RS', 	'SC', 	'SE', 	'SP',	'TO') )
)
View(POP)
POP = pop %>%
select(Município, `Situação do domicílio`,Valor) %>%
`colnames<-`(c('Município','Situa','Percentual')) %>%
mutate(
UF = as.numeric(stringr::str_sub(Município,1,2)))
POP = pop %>%
select(`Município (Código)`, `Situação do domicílio`,Valor) %>%
`colnames<-`(c('Município','Situa','Percentual')) %>%
mutate(
UF = as.numeric(stringr::str_sub(Município,1,2)),
CD_GEOCUF = as.character(UF),
uf = factor(UF,levels =  c(12, 27, 	13, 16,	29, 23,	53, 32,	52, 21,	31, 50,	51, 15,
25, 26, 	22, 41,	33, 24,	11, 14,	43, 42,	28, 35,	17),
labels =  c('AC', 	'AL', 	'AM', 	'AP', 	'BA', 	'CE', 	'DF', 	'ES', 	'GO', 	'MA',
'MG', 	'MS', 	'MT', 	'PA', 	'PB', 	'PE', 	'PI', 	'PR', 	'RJ', 	'RN',
'RO', 	'RR', 	'RS', 	'SC', 	'SE', 	'SP',	'TO') )
)
POP = pop %>%
select(`Município (Código)`, `Situação do domicílio`,Valor) %>%
`colnames<-`(c('Município','Situa','Percentual')) %>%
tidyr::spread(Situa, Percentual)
POP = pop %>%
select(`Município (Código)`, `Situação do domicílio`,Valor) %>%
`colnames<-`(c('Município','Situa','Percentual')) %>%
tidyr::spread(Situa, Percentual) %>% # long para wide
mutate(
UF = as.numeric(stringr::str_sub(Município,1,2)),
CD_GEOCUF = as.character(UF),
uf = factor(UF,levels =  c(12, 27, 	13, 16,	29, 23,	53, 32,	52, 21,	31, 50,	51, 15,
25, 26, 	22, 41,	33, 24,	11, 14,	43, 42,	28, 35,	17),
labels =  c('AC', 	'AL', 	'AM', 	'AP', 	'BA', 	'CE', 	'DF', 	'ES', 	'GO', 	'MA',
'MG', 	'MS', 	'MT', 	'PA', 	'PB', 	'PE', 	'PI', 	'PR', 	'RJ', 	'RN',
'RO', 	'RR', 	'RS', 	'SC', 	'SE', 	'SP',	'TO') )
)
POP = pop %>%
select(`Município (Código)`, `Situação do domicílio`,Valor) %>%
`colnames<-`(c('Município','Situa','Percentual')) %>%
tidyr::spread(Situa, Percentual) %>% # long para wide
mutate(
UF = as.numeric(stringr::str_sub(Município,1,2)),
CD_GEOCUF = as.character(UF),
uf = factor(UF,levels =  c(12, 27, 	13, 16,	29, 23,	53, 32,	52, 21,	31, 50,	51, 15,
25, 26, 	22, 41,	33, 24,	11, 14,	43, 42,	28, 35,	17),
labels =  c('AC', 	'AL', 	'AM', 	'AP', 	'BA', 	'CE', 	'DF', 	'ES', 	'GO', 	'MA',
'MG', 	'MS', 	'MT', 	'PA', 	'PB', 	'PE', 	'PI', 	'PR', 	'RJ', 	'RN',
'RO', 	'RR', 	'RS', 	'SC', 	'SE', 	'SP',	'TO') ),
Predom_Rural = ifelse(Rural > Urbana, 1,0)
)
sum(POP$Predom_Rural)
sum(POP$Predom_Rural,na.rm=T)
POP = pop %>%
select(`Município (Código)`, `Situação do domicílio`,Valor) %>%
`colnames<-`(c('Município','Situa','Percentual')) %>%
tidyr::spread(Situa, Percentual) %>% # long para wide
mutate_if(is.numeric, ~replace(., is.na(.), 0)) %>%
mutate(
UF = as.numeric(stringr::str_sub(Município,1,2)),
CD_GEOCUF = as.character(UF),
uf = factor(UF,levels =  c(12, 27, 	13, 16,	29, 23,	53, 32,	52, 21,	31, 50,	51, 15,
25, 26, 	22, 41,	33, 24,	11, 14,	43, 42,	28, 35,	17),
labels =  c('AC', 	'AL', 	'AM', 	'AP', 	'BA', 	'CE', 	'DF', 	'ES', 	'GO', 	'MA',
'MG', 	'MS', 	'MT', 	'PA', 	'PB', 	'PE', 	'PI', 	'PR', 	'RJ', 	'RN',
'RO', 	'RR', 	'RS', 	'SC', 	'SE', 	'SP',	'TO') ),
Predom_Rural = ifelse(Rural > Urbana, 1,0)
)
sum(POP$Predom_Rural,na.rm=T)
nrow(POP)
sum(POP$Predom_Rural,na.rm=T)/nrow(POP)
100*(sum(POP$Predom_Rural,na.rm=T)/nrow(POP))
round(100*(sum(POP$Predom_Rural,na.rm=T)/nrow(POP)),2)
POP = pop %>%
select(`Município (Código)`, `Situação do domicílio`,Valor) %>%
`colnames<-`(c('Município','Situa','Percentual')) %>%
tidyr::spread(Situa, Percentual) %>% # long para wide
mutate_if(is.numeric, ~replace(., is.na(.), 0)) %>%
mutate(
UF = as.numeric(stringr::str_sub(Município,1,2)),
CD_GEOCUF = as.character(UF),
CD_GEOCMUNI = as.character(Município),
uf = factor(UF,levels =  c(12, 27, 	13, 16,	29, 23,	53, 32,	52, 21,	31, 50,	51, 15,
25, 26, 	22, 41,	33, 24,	11, 14,	43, 42,	28, 35,	17),
labels =  c('AC', 	'AL', 	'AM', 	'AP', 	'BA', 	'CE', 	'DF', 	'ES', 	'GO', 	'MA',
'MG', 	'MS', 	'MT', 	'PA', 	'PB', 	'PE', 	'PI', 	'PR', 	'RJ', 	'RN',
'RO', 	'RR', 	'RS', 	'SC', 	'SE', 	'SP',	'TO') ),
Predom_Rural = ifelse(Rural > Urbana, 1,0)
)
fwrite(POP,'C:/Users/William/Google Drive/Tese2018/Dados/Uso_Terra_Muni/Rural_Muni.csv')
gc()
(-95)^(1/22)
(95)^(1/22)
{{[1+[95/100]]^(1/20)}-1}*100
(([1+[95/100]]^(1/20))-1)*100
(((1+(95/100))^(1/20))-1)*100
(((1+.95)^(1/20))-1)*100
(((1+.95)^(1/20))-1)*100
2265671.00000000-2265666.50000000
95971.27343750-1173620
(95971.27343750/1173620)-
(95971.27343750/1173620)-1
((95971.27343750/1173620)-1)*100
((95971.27343750/1173620)^(1/20))
((95971.27343750/1173620)^(1/20))-1
D = list()
View(D)
print('Hello, world')
hugo
?hugo
??hugo
hugo_version()
library(blogdown)
hugo_version()
install.packages("gee")
install.packages("CGE")
remove.packages("gee", lib="~/R-3.6.0/library")
print(1)
print(1+1)
print('a'+'b')
print('a','b')
print('a','b')
paste0('a','b')
paste0(1)
paste(1)
paste0(1+2)
setwd('C:/Users/William/CriandoTemaHugo')
blogdown::build_site()
blogdown::serve_site()
print(2+1)
print("1+2")
paste0(1+2)
chooseCRANmirror(graphics=FALSE, ind=1)
knitr::opts_chunk$set(echo = TRUE)
print("1+2")
paste0(1) # pritando um valor numérico
paste0(1+2) # exibindo a soma de dois números em que a saída será uma string
paste0('A','B') # exibindo a união de dois caracteres
setwd('C:/Users/William/CriandoTemaHugo')
blogdown::build_site()
blogdown::serve_site()
setwd('C:/Users/William/CriandoTemaHugo')
blogdown::build_site()
blogdown::serve_site()
setwd('C:/Users/William/CriandoTemaHugo')
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
setwd('C:/Users/William/CriandoTemaHugo')
blogdown::build_site()
blogdown::serve_site()
setwd('C:/Users/William/CriandoTemaHugo')
blogdown::build_site()
blogdown::serve_site()
# https://search.google.com/search-console?resource_id=https%3A%2F%2Fcodigo-livre-economy.netlify.com%2F&hl=pt-BR
